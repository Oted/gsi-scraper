var Hoek = require('hoek');
var Utils = require('./utils');
var Request = require('request');

function JsonEndpointScraper(_variables) {
    this._variables = _variables;
};

/**
 *  Handles the JSON endpoint scraping
 */
JsonEndpointScraper.prototype.scrape = function(config, done) {
	if (!config.request) {
        throw new TypeError('Please specify request options when using the json_endpoint extractor.');
    }

    var defaults = {
        method: 'GET'
    }, that = this;

    var options = Hoek.applyToDefaults(defaults, config.request);
      
    if (options.json) {
        //get the result in the root object, then reach for the value and replaces any handles on the result 
        options.json = options.json.replace(/\{\{(.*)\}\}/g, Utils.reachForValue.bind(this));
        try {
            options.json = JSON.parse(options.json);
        } catch (err) {
            return done(new TypeError("Invalid reference in JSON.")); 
        }
    }

    Request(options, function(err, result, json) {
        if (err) {
            return done(err);
        }
        
        if (config.mapping) {
            json = Utils.mapJsonResponse(that._variables, config.mapping, json);
        }

        done(null, json);
    });
};


module.exports = exports = JsonEndpointScraper;
